{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahahmed/Desktop/Cost-Estimator/Frontend/src/ResultsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { Document, Packer, Paragraph, Table, TableCell, TableRow } from 'docx';\nimport { saveAs } from 'file-saver';\nimport { Pencil, Check } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ResultsTable({\n  projectData\n}) {\n  _s();\n  const [tasks, setTasks] = useState(projectData.tasks || []);\n  const [editingRow, setEditingRow] = useState({});\n  const [errors, setErrors] = useState({});\n  const [hourlyRate, setHourlyRate] = useState(0);\n  const totalHours = tasks.reduce((sum, task) => sum + task.subtasks.reduce((subSum, subtask) => subSum + Number(subtask.hours || 0), 0), 0);\n  const handleChange = (taskIndex, subtaskIndex, field, value) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[taskIndex].subtasks[subtaskIndex][field] = value;\n    setTasks(updatedTasks);\n    console.log('Updated tasks during change:', JSON.stringify(updatedTasks, null, 2));\n  };\n  const handleSave = (taskIndex, subtaskIndex) => {\n    const subtask = tasks[taskIndex].subtasks[subtaskIndex];\n    if (!subtask.subtask || subtask.hours <= 0 || isNaN(subtask.hours)) {\n      setErrors({\n        taskIndex,\n        subtaskIndex,\n        message: 'Subtask name cannot be empty, and hours must be a positive number.'\n      });\n      return;\n    }\n    setErrors({});\n    setEditingRow({});\n  };\n  const exportToPDF = () => {\n    const doc = new jsPDF();\n    doc.text('Project Task Details', 14, 20);\n    const tableData = [];\n    tasks.forEach(({\n      task,\n      subtasks\n    }) => {\n      tableData.push([task, '', '', '']);\n      subtasks.forEach(({\n        subtask,\n        hours,\n        comments\n      }) => {\n        tableData.push(['', subtask, `${hours} hours`, comments || 'N/A']);\n      });\n    });\n    tableData.push(['', 'Total No. of Hours', `${totalHours} hours`, '']);\n    tableData.push(['', 'Hourly Rate', `$${hourlyRate}`, '']);\n    tableData.push(['', 'Total Cost', `$${(totalHours * hourlyRate).toFixed(2)}`, '']);\n    autoTable(doc, {\n      head: [['Task', 'Subtask', 'Development Hours', 'Comments']],\n      body: tableData,\n      startY: 30,\n      margin: {\n        left: 14,\n        right: 14\n      },\n      headStyles: {\n        fillColor: [41, 128, 185],\n        textColor: 255\n      },\n      alternateRowStyles: {\n        fillColor: [240, 240, 240]\n      }\n    });\n    doc.save('Project_Estimates.pdf');\n  };\n  const exportToDOCX = () => {\n    const docContent = [];\n    tasks.forEach(({\n      task,\n      subtasks\n    }) => {\n      docContent.push(new Paragraph({\n        text: task,\n        heading: 'Heading2',\n        spacing: {\n          after: 200\n        }\n      }));\n      const subtaskRows = subtasks.map(({\n        subtask,\n        hours,\n        comments\n      }) => new TableRow({\n        children: [new TableCell({\n          children: [new Paragraph({\n            text: subtask,\n            alignment: 'center'\n          })]\n        }), new TableCell({\n          children: [new Paragraph({\n            text: `${hours} hours`,\n            alignment: 'center'\n          })]\n        }), new TableCell({\n          children: [new Paragraph({\n            text: comments || 'N/A',\n            alignment: 'center'\n          })]\n        })]\n      }));\n      const table = new Table({\n        rows: [new TableRow({\n          children: [new TableCell({\n            children: [new Paragraph({\n              text: 'Subtask',\n              bold: true,\n              alignment: 'center'\n            })],\n            shading: {\n              fill: 'DCE6F1'\n            }\n          }), new TableCell({\n            children: [new Paragraph({\n              text: 'Development Hours',\n              bold: true,\n              alignment: 'center'\n            })],\n            shading: {\n              fill: 'DCE6F1'\n            }\n          }), new TableCell({\n            children: [new Paragraph({\n              text: 'Comments',\n              bold: true,\n              alignment: 'center'\n            })],\n            shading: {\n              fill: 'DCE6F1'\n            }\n          })]\n        }), ...subtaskRows],\n        width: {\n          size: 100,\n          type: 'pct'\n        }\n      });\n      docContent.push(table);\n    });\n    docContent.push(new Paragraph({\n      text: `Total No. of Hours: ${totalHours}`,\n      spacing: {\n        after: 200\n      }\n    }), new Paragraph({\n      text: `Hourly Rate: $${hourlyRate}`,\n      spacing: {\n        after: 200\n      }\n    }), new Paragraph({\n      text: `Total Cost: $${(totalHours * hourlyRate).toFixed(2)}`,\n      spacing: {\n        after: 200\n      }\n    }));\n    const doc = new Document({\n      sections: [{\n        children: [new Paragraph({\n          text: 'Project Task Details',\n          heading: 'Heading1',\n          spacing: {\n            after: 300\n          }\n        }), ...docContent]\n      }]\n    });\n    Packer.toBlob(doc).then(blob => {\n      saveAs(blob, 'Project_Estimates.docx');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: styles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Project Task Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subtask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Development Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [tasks.map((taskItem, taskIndex) => taskItem.subtasks.map((subtask, subIndex) => {\n            const isEditing = editingRow.taskIndex === taskIndex && editingRow.subtaskIndex === subIndex;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"relative group border-b border-gray-100 hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: subIndex === 0 ? taskItem.task : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: subtask.subtask,\n                  onChange: e => handleChange(taskIndex, subIndex, 'subtask', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 49\n                }, this) : subtask.subtask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: subtask.hours,\n                  onChange: e => handleChange(taskIndex, subIndex, 'hours', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 49\n                }, this) : `${subtask.hours} hours`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: subtask.comments,\n                  onChange: e => handleChange(taskIndex, subIndex, 'comments', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 49\n                }, this) : subtask.comments || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-center\",\n                  children: isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleSave(taskIndex, subIndex),\n                    className: \"p-1.5 rounded-full hover:bg-blue-100 transition-all duration-200\",\n                    children: /*#__PURE__*/_jsxDEV(Check, {\n                      size: 16,\n                      className: \"text-blue-600\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 53\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setEditingRow({\n                      taskIndex,\n                      subtaskIndex: subIndex\n                    }),\n                    className: \"invisible group-hover:visible p-1.5 rounded-full hover:bg-gray-200 transition-all duration-200\",\n                    children: /*#__PURE__*/_jsxDEV(Pencil, {\n                      size: 16,\n                      className: \"text-gray-600\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 41\n              }, this)]\n            }, `${taskIndex}-${subIndex}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this);\n          })), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total No. of Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: [totalHours, \" hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Hourly Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: hourlyRate,\n                onChange: e => setHourlyRate(Number(e.target.value)),\n                placeholder: \"Enter rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: [\"$\", (totalHours * hourlyRate).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errors.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"export-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: exportToPDF,\n          children: \"Export to PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: exportToDOCX,\n          children: \"Export to DOCX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ResultsTable, \"TPiq2MXHGENNXYRfg1s5dK5AjoE=\");\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","useState","jsPDF","autoTable","Document","Packer","Paragraph","Table","TableCell","TableRow","saveAs","Pencil","Check","jsxDEV","_jsxDEV","Fragment","_Fragment","ResultsTable","projectData","_s","tasks","setTasks","editingRow","setEditingRow","errors","setErrors","hourlyRate","setHourlyRate","totalHours","reduce","sum","task","subtasks","subSum","subtask","Number","hours","handleChange","taskIndex","subtaskIndex","field","value","updatedTasks","console","log","JSON","stringify","handleSave","isNaN","message","exportToPDF","doc","text","tableData","forEach","push","comments","toFixed","head","body","startY","margin","left","right","headStyles","fillColor","textColor","alternateRowStyles","save","exportToDOCX","docContent","heading","spacing","after","subtaskRows","map","children","alignment","table","rows","bold","shading","fill","width","size","type","sections","toBlob","then","blob","styles","fileName","_jsxFileName","lineNumber","columnNumber","className","taskItem","subIndex","isEditing","onChange","e","target","onClick","colSpan","placeholder","_c","$RefreshReg$"],"sources":["/Users/abdullahahmed/Desktop/Cost-Estimator/Frontend/src/ResultsTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { Document, Packer, Paragraph, Table, TableCell, TableRow } from 'docx';\nimport { saveAs } from 'file-saver';\nimport { Pencil, Check } from 'lucide-react';\n\nfunction ResultsTable({ projectData }) {\n    const [tasks, setTasks] = useState(projectData.tasks || []);\n    const [editingRow, setEditingRow] = useState({});\n    const [errors, setErrors] = useState({});\n    const [hourlyRate, setHourlyRate] = useState(0);\n\n    const totalHours = tasks.reduce(\n        (sum, task) =>\n            sum + task.subtasks.reduce((subSum, subtask) => subSum + Number(subtask.hours || 0), 0),\n        0\n    );\n\n    const handleChange = (taskIndex, subtaskIndex, field, value) => {\n        const updatedTasks = [...tasks];\n        updatedTasks[taskIndex].subtasks[subtaskIndex][field] = value;\n        setTasks(updatedTasks);\n        console.log('Updated tasks during change:', JSON.stringify(updatedTasks, null, 2));\n    };\n\n    const handleSave = (taskIndex, subtaskIndex) => {\n        const subtask = tasks[taskIndex].subtasks[subtaskIndex];\n\n        if (!subtask.subtask || subtask.hours <= 0 || isNaN(subtask.hours)) {\n            setErrors({\n                taskIndex,\n                subtaskIndex,\n                message: 'Subtask name cannot be empty, and hours must be a positive number.',\n            });\n            return;\n        }\n\n        setErrors({});\n        setEditingRow({});\n    };\n\n    const exportToPDF = () => {\n        const doc = new jsPDF();\n        doc.text('Project Task Details', 14, 20);\n\n        const tableData = [];\n        tasks.forEach(({ task, subtasks }) => {\n            tableData.push([task, '', '', '']);\n            subtasks.forEach(({ subtask, hours, comments }) => {\n                tableData.push(['', subtask, `${hours} hours`, comments || 'N/A']);\n            });\n        });\n\n        tableData.push(['', 'Total No. of Hours', `${totalHours} hours`, '']);\n        tableData.push(['', 'Hourly Rate', `$${hourlyRate}`, '']);\n        tableData.push(['', 'Total Cost', `$${(totalHours * hourlyRate).toFixed(2)}`, '']);\n\n        autoTable(doc, {\n            head: [['Task', 'Subtask', 'Development Hours', 'Comments']],\n            body: tableData,\n            startY: 30,\n            margin: { left: 14, right: 14 },\n            headStyles: { fillColor: [41, 128, 185], textColor: 255 },\n            alternateRowStyles: { fillColor: [240, 240, 240] },\n        });\n\n        doc.save('Project_Estimates.pdf');\n    };\n\n    const exportToDOCX = () => {\n        const docContent = [];\n\n        tasks.forEach(({ task, subtasks }) => {\n            docContent.push(\n                new Paragraph({\n                    text: task,\n                    heading: 'Heading2',\n                    spacing: { after: 200 },\n                })\n            );\n\n            const subtaskRows = subtasks.map(({ subtask, hours, comments }) =>\n                new TableRow({\n                    children: [\n                        new TableCell({\n                            children: [new Paragraph({ text: subtask, alignment: 'center' })],\n                        }),\n                        new TableCell({\n                            children: [new Paragraph({ text: `${hours} hours`, alignment: 'center' })],\n                        }),\n                        new TableCell({\n                            children: [new Paragraph({ text: comments || 'N/A', alignment: 'center' })],\n                        }),\n                    ],\n                })\n            );\n\n            const table = new Table({\n                rows: [\n                    new TableRow({\n                        children: [\n                            new TableCell({\n                                children: [new Paragraph({ text: 'Subtask', bold: true, alignment: 'center' })],\n                                shading: { fill: 'DCE6F1' },\n                            }),\n                            new TableCell({\n                                children: [new Paragraph({ text: 'Development Hours', bold: true, alignment: 'center' })],\n                                shading: { fill: 'DCE6F1' },\n                            }),\n                            new TableCell({\n                                children: [new Paragraph({ text: 'Comments', bold: true, alignment: 'center' })],\n                                shading: { fill: 'DCE6F1' },\n                            }),\n                        ],\n                    }),\n                    ...subtaskRows,\n                ],\n                width: { size: 100, type: 'pct' },\n            });\n\n            docContent.push(table);\n        });\n\n        docContent.push(\n            new Paragraph({\n                text: `Total No. of Hours: ${totalHours}`,\n                spacing: { after: 200 },\n            }),\n            new Paragraph({\n                text: `Hourly Rate: $${hourlyRate}`,\n                spacing: { after: 200 },\n            }),\n            new Paragraph({\n                text: `Total Cost: $${(totalHours * hourlyRate).toFixed(2)}`,\n                spacing: { after: 200 },\n            })\n        );\n\n        const doc = new Document({\n            sections: [\n                {\n                    children: [\n                        new Paragraph({\n                            text: 'Project Task Details',\n                            heading: 'Heading1',\n                            spacing: { after: 300 },\n                        }),\n                        ...docContent,\n                    ],\n                },\n            ],\n        });\n\n        Packer.toBlob(doc).then((blob) => {\n            saveAs(blob, 'Project_Estimates.docx');\n        });\n    };\n\n    return (\n        <>\n            <style>{styles}</style>\n            <div className=\"results-table\">\n                <h3>Project Task Details</h3>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Task</th>\n                            <th>Subtask</th>\n                            <th>Development Hours</th>\n                            <th>Comments</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {tasks.map((taskItem, taskIndex) =>\n                            taskItem.subtasks.map((subtask, subIndex) => {\n                                const isEditing =\n                                    editingRow.taskIndex === taskIndex &&\n                                    editingRow.subtaskIndex === subIndex;\n\n                                return (\n                                    <tr \n                                        key={`${taskIndex}-${subIndex}`}\n                                        className=\"relative group border-b border-gray-100 hover:bg-gray-50\"\n                                    >\n                                        <td>{subIndex === 0 ? taskItem.task : ''}</td>\n                                        <td>\n                                            {isEditing ? (\n                                                <input\n                                                    type=\"text\"\n                                                    value={subtask.subtask}\n                                                    onChange={(e) =>\n                                                        handleChange(taskIndex, subIndex, 'subtask', e.target.value)\n                                                    }\n                                                />\n                                            ) : (\n                                                subtask.subtask\n                                            )}\n                                        </td>\n                                        <td>\n                                            {isEditing ? (\n                                                <input\n                                                    type=\"number\"\n                                                    value={subtask.hours}\n                                                    onChange={(e) =>\n                                                        handleChange(taskIndex, subIndex, 'hours', e.target.value)\n                                                    }\n                                                />\n                                            ) : (\n                                                `${subtask.hours} hours`\n                                            )}\n                                        </td>\n                                        <td>\n                                            {isEditing ? (\n                                                <input\n                                                    type=\"text\"\n                                                    value={subtask.comments}\n                                                    onChange={(e) =>\n                                                        handleChange(taskIndex, subIndex, 'comments', e.target.value)\n                                                    }\n                                                />\n                                            ) : (\n                                                subtask.comments || 'N/A'\n                                            )}\n                                        </td>\n                                        <td>\n                                            <div className=\"flex justify-center\">\n                                                {isEditing ? (\n                                                    <button\n                                                        onClick={() => handleSave(taskIndex, subIndex)}\n                                                        className=\"p-1.5 rounded-full hover:bg-blue-100 transition-all duration-200\"\n                                                    >\n                                                        <Check size={16} className=\"text-blue-600\" />\n                                                    </button>\n                                                ) : (\n                                                    <button\n                                                        onClick={() =>\n                                                            setEditingRow({\n                                                                taskIndex,\n                                                                subtaskIndex: subIndex,\n                                                            })\n                                                        }\n                                                        className=\"invisible group-hover:visible p-1.5 rounded-full hover:bg-gray-200 transition-all duration-200\"\n                                                    >\n                                                        <Pencil size={16} className=\"text-gray-600\" />\n                                                    </button>\n                                                )}\n                                            </div>\n                                        </td>\n                                    </tr>\n                                );\n                            })\n                        )}\n                        {/* Summary Rows */}\n                        <tr>\n                            <td colSpan=\"2\"><strong>Total No. of Hours</strong></td>\n                            <td colSpan=\"2\">{totalHours} hours</td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"2\"><strong>Hourly Rate</strong></td>\n                            <td colSpan=\"2\">\n                                <input\n                                    type=\"number\"\n                                    value={hourlyRate}\n                                    onChange={(e) => setHourlyRate(Number(e.target.value))}\n                                    placeholder=\"Enter rate\"\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"2\"><strong>Total Cost</strong></td>\n                            <td colSpan=\"2\">${(totalHours * hourlyRate).toFixed(2)}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                {errors.message && <p className=\"error\">{errors.message}</p>}\n                <div className=\"export-buttons\">\n                    <button className=\"action-button\" onClick={exportToPDF}>\n                        Export to PDF\n                    </button>\n                    <button className=\"action-button\" onClick={exportToDOCX}>\n                        Export to DOCX\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default ResultsTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}