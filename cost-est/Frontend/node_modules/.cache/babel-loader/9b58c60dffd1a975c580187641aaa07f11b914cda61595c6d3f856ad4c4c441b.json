{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahahmed/Desktop/Cost-Estimator/Frontend/src/ResultsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { Document, Packer, Paragraph, Table, TableCell, TableRow } from 'docx';\nimport { saveAs } from 'file-saver';\nimport { Pencil, Check } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsTable({\n  projectData\n}) {\n  _s();\n  const [tasks, setTasks] = useState(projectData.tasks || []);\n  const [editingRow, setEditingRow] = useState({}); // Track which row is being edited\n  const [errors, setErrors] = useState({}); // Track errors for validation\n  const [hourlyRate, setHourlyRate] = useState(0); // Hourly rate for calculations\n\n  // Calculate total hours\n  const totalHours = tasks.reduce((sum, task) => sum + task.subtasks.reduce((subSum, subtask) => subSum + Number(subtask.hours || 0), 0), 0);\n\n  // Handle input changes during editing\n  const handleChange = (taskIndex, subtaskIndex, field, value) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[taskIndex].subtasks[subtaskIndex][field] = value;\n    setTasks(updatedTasks);\n    console.log('Updated tasks during change:', JSON.stringify(updatedTasks, null, 2)); // Log updated tasks\n  };\n\n  // Handle save action for a specific row\n  const handleSave = (taskIndex, subtaskIndex) => {\n    const subtask = tasks[taskIndex].subtasks[subtaskIndex];\n\n    // Validate input\n    if (!subtask.subtask || subtask.hours <= 0 || isNaN(subtask.hours)) {\n      setErrors({\n        taskIndex,\n        subtaskIndex,\n        message: 'Subtask name cannot be empty, and hours must be a positive number.'\n      });\n      console.error('Validation error:', errors.message); // Log validation error\n      return;\n    }\n\n    // Clear errors and exit editing mode\n    setErrors({});\n    setEditingRow({});\n    console.log('Updated tasks after save:', JSON.stringify(tasks, null, 2)); // Log updated tasks after saving\n  };\n\n  // Export to PDF\n  const exportToPDF = () => {\n    const doc = new jsPDF();\n    doc.text('Project Task Details', 14, 20);\n    const tableData = [];\n    tasks.forEach(({\n      task,\n      subtasks\n    }) => {\n      tableData.push([task, '', '', '']);\n      subtasks.forEach(({\n        subtask,\n        hours,\n        comments\n      }) => {\n        tableData.push(['', subtask, `${hours} hours`, comments || 'N/A']);\n      });\n    });\n\n    // Add summary rows\n    tableData.push(['', 'Total No. of Hours', `${totalHours} hours`, '']);\n    tableData.push(['', 'Hourly Rate', `$${hourlyRate}`, '']);\n    tableData.push(['', 'Total Cost', `$${(totalHours * hourlyRate).toFixed(2)}`, '']);\n    autoTable(doc, {\n      head: [['Task', 'Subtask', 'Development Hours', 'Comments']],\n      body: tableData,\n      startY: 30,\n      margin: {\n        left: 14,\n        right: 14\n      },\n      headStyles: {\n        fillColor: [41, 128, 185],\n        textColor: 255\n      },\n      alternateRowStyles: {\n        fillColor: [240, 240, 240]\n      }\n    });\n    doc.save('Project_Estimates.pdf');\n  };\n\n  // Export to DOCX\n  const exportToDOCX = () => {\n    const docContent = [];\n    tasks.forEach(({\n      task,\n      subtasks\n    }) => {\n      docContent.push(new Paragraph({\n        text: task,\n        heading: 'Heading2',\n        spacing: {\n          after: 200\n        }\n      }));\n      const subtaskRows = subtasks.map(({\n        subtask,\n        hours,\n        comments\n      }) => new TableRow({\n        children: [new TableCell({\n          children: [new Paragraph({\n            text: subtask,\n            alignment: 'center'\n          })]\n        }), new TableCell({\n          children: [new Paragraph({\n            text: `${hours} hours`,\n            alignment: 'center'\n          })]\n        }), new TableCell({\n          children: [new Paragraph({\n            text: comments || 'N/A',\n            alignment: 'center'\n          })]\n        })]\n      }));\n      const table = new Table({\n        rows: [new TableRow({\n          children: [new TableCell({\n            children: [new Paragraph({\n              text: 'Subtask',\n              bold: true,\n              alignment: 'center'\n            })],\n            shading: {\n              fill: 'DCE6F1'\n            }\n          }), new TableCell({\n            children: [new Paragraph({\n              text: 'Development Hours',\n              bold: true,\n              alignment: 'center'\n            })],\n            shading: {\n              fill: 'DCE6F1'\n            }\n          }), new TableCell({\n            children: [new Paragraph({\n              text: 'Comments',\n              bold: true,\n              alignment: 'center'\n            })],\n            shading: {\n              fill: 'DCE6F1'\n            }\n          })]\n        }), ...subtaskRows],\n        width: {\n          size: 100,\n          type: 'pct'\n        }\n      });\n      docContent.push(table);\n    });\n\n    // Add summary\n    docContent.push(new Paragraph({\n      text: `Total No. of Hours: ${totalHours}`,\n      spacing: {\n        after: 200\n      }\n    }), new Paragraph({\n      text: `Hourly Rate: $${hourlyRate}`,\n      spacing: {\n        after: 200\n      }\n    }), new Paragraph({\n      text: `Total Cost: $${(totalHours * hourlyRate).toFixed(2)}`,\n      spacing: {\n        after: 200\n      }\n    }));\n    const doc = new Document({\n      sections: [{\n        children: [new Paragraph({\n          text: 'Project Task Details',\n          heading: 'Heading1',\n          spacing: {\n            after: 300\n          }\n        }), ...docContent]\n      }]\n    });\n    Packer.toBlob(doc).then(blob => {\n      saveAs(blob, 'Project_Estimates.docx');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Project Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Development Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [tasks.map((taskItem, taskIndex) => taskItem.subtasks.map((subtask, subIndex) => {\n          const isEditing = editingRow.taskIndex === taskIndex && editingRow.subtaskIndex === subIndex;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"group hover:bg-gray-50 transition-colors duration-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: subIndex === 0 ? taskItem.task : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: subtask.subtask,\n                onChange: e => handleChange(taskIndex, subIndex, 'subtask', e.target.value),\n                className: \"p-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 45\n              }, this) : subtask.subtask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: subtask.hours,\n                onChange: e => handleChange(taskIndex, subIndex, 'hours', e.target.value),\n                className: \"p-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 45\n              }, this) : `${subtask.hours} hours`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: subtask.comments,\n                onChange: e => handleChange(taskIndex, subIndex, 'comments', e.target.value),\n                className: \"p-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 45\n              }, this) : subtask.comments || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"p-1 rounded-full hover:bg-blue-100 transition-colors duration-200\",\n                onClick: () => handleSave(taskIndex, subIndex),\n                children: /*#__PURE__*/_jsxDEV(Check, {\n                  size: 16,\n                  className: \"text-blue-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"opacity-0 group-hover:opacity-100 p-1 rounded-full hover:bg-gray-200 transition-all duration-200\",\n                onClick: () => setEditingRow({\n                  taskIndex,\n                  subtaskIndex: subIndex\n                }),\n                children: /*#__PURE__*/_jsxDEV(Pencil, {\n                  size: 16,\n                  className: \"text-gray-600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 37\n            }, this)]\n          }, `${taskIndex}-${subIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this);\n        })), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total No. of Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: [totalHours, \" hours\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Hourly Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: hourlyRate,\n              onChange: e => setHourlyRate(Number(e.target.value)),\n              placeholder: \"Enter rate\",\n              className: \"p-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: [\"$\", (totalHours * hourlyRate).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), errors.message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errors.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"export-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: exportToPDF,\n        children: \"Export to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: exportToDOCX,\n        children: \"Export to DOCX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n}\n_s(ResultsTable, \"TPiq2MXHGENNXYRfg1s5dK5AjoE=\");\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","useState","jsPDF","autoTable","Document","Packer","Paragraph","Table","TableCell","TableRow","saveAs","Pencil","Check","jsxDEV","_jsxDEV","ResultsTable","projectData","_s","tasks","setTasks","editingRow","setEditingRow","errors","setErrors","hourlyRate","setHourlyRate","totalHours","reduce","sum","task","subtasks","subSum","subtask","Number","hours","handleChange","taskIndex","subtaskIndex","field","value","updatedTasks","console","log","JSON","stringify","handleSave","isNaN","message","error","exportToPDF","doc","text","tableData","forEach","push","comments","toFixed","head","body","startY","margin","left","right","headStyles","fillColor","textColor","alternateRowStyles","save","exportToDOCX","docContent","heading","spacing","after","subtaskRows","map","children","alignment","table","rows","bold","shading","fill","width","size","type","sections","toBlob","then","blob","className","fileName","_jsxFileName","lineNumber","columnNumber","taskItem","subIndex","isEditing","onChange","e","target","onClick","colSpan","placeholder","_c","$RefreshReg$"],"sources":["/Users/abdullahahmed/Desktop/Cost-Estimator/Frontend/src/ResultsTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { Document, Packer, Paragraph, Table, TableCell, TableRow } from 'docx';\nimport { saveAs } from 'file-saver';\nimport { Pencil, Check } from 'lucide-react';\n\nfunction ResultsTable({ projectData }) {\n    const [tasks, setTasks] = useState(projectData.tasks || []);\n    const [editingRow, setEditingRow] = useState({}); // Track which row is being edited\n    const [errors, setErrors] = useState({}); // Track errors for validation\n    const [hourlyRate, setHourlyRate] = useState(0); // Hourly rate for calculations\n\n    // Calculate total hours\n    const totalHours = tasks.reduce(\n        (sum, task) =>\n            sum + task.subtasks.reduce((subSum, subtask) => subSum + Number(subtask.hours || 0), 0),\n        0\n    );\n\n    // Handle input changes during editing\n    const handleChange = (taskIndex, subtaskIndex, field, value) => {\n        const updatedTasks = [...tasks];\n        updatedTasks[taskIndex].subtasks[subtaskIndex][field] = value;\n        setTasks(updatedTasks);\n        console.log('Updated tasks during change:', JSON.stringify(updatedTasks, null, 2)); // Log updated tasks\n    };\n\n    // Handle save action for a specific row\n    const handleSave = (taskIndex, subtaskIndex) => {\n        const subtask = tasks[taskIndex].subtasks[subtaskIndex];\n\n        // Validate input\n        if (!subtask.subtask || subtask.hours <= 0 || isNaN(subtask.hours)) {\n            setErrors({\n                taskIndex,\n                subtaskIndex,\n                message: 'Subtask name cannot be empty, and hours must be a positive number.',\n            });\n            console.error('Validation error:', errors.message); // Log validation error\n            return;\n        }\n\n        // Clear errors and exit editing mode\n        setErrors({});\n        setEditingRow({});\n        console.log('Updated tasks after save:', JSON.stringify(tasks, null, 2)); // Log updated tasks after saving\n    };\n\n    // Export to PDF\n    const exportToPDF = () => {\n        const doc = new jsPDF();\n        doc.text('Project Task Details', 14, 20);\n\n        const tableData = [];\n        tasks.forEach(({ task, subtasks }) => {\n            tableData.push([task, '', '', '']);\n            subtasks.forEach(({ subtask, hours, comments }) => {\n                tableData.push(['', subtask, `${hours} hours`, comments || 'N/A']);\n            });\n        });\n\n        // Add summary rows\n        tableData.push(['', 'Total No. of Hours', `${totalHours} hours`, '']);\n        tableData.push(['', 'Hourly Rate', `$${hourlyRate}`, '']);\n        tableData.push(['', 'Total Cost', `$${(totalHours * hourlyRate).toFixed(2)}`, '']);\n\n        autoTable(doc, {\n            head: [['Task', 'Subtask', 'Development Hours', 'Comments']],\n            body: tableData,\n            startY: 30,\n            margin: { left: 14, right: 14 },\n            headStyles: { fillColor: [41, 128, 185], textColor: 255 },\n            alternateRowStyles: { fillColor: [240, 240, 240] },\n        });\n\n        doc.save('Project_Estimates.pdf');\n    };\n\n    // Export to DOCX\n    const exportToDOCX = () => {\n        const docContent = [];\n\n        tasks.forEach(({ task, subtasks }) => {\n            docContent.push(\n                new Paragraph({\n                    text: task,\n                    heading: 'Heading2',\n                    spacing: { after: 200 },\n                })\n            );\n\n            const subtaskRows = subtasks.map(({ subtask, hours, comments }) =>\n                new TableRow({\n                    children: [\n                        new TableCell({\n                            children: [new Paragraph({ text: subtask, alignment: 'center' })],\n                        }),\n                        new TableCell({\n                            children: [new Paragraph({ text: `${hours} hours`, alignment: 'center' })],\n                        }),\n                        new TableCell({\n                            children: [new Paragraph({ text: comments || 'N/A', alignment: 'center' })],\n                        }),\n                    ],\n                })\n            );\n\n            const table = new Table({\n                rows: [\n                    new TableRow({\n                        children: [\n                            new TableCell({\n                                children: [new Paragraph({ text: 'Subtask', bold: true, alignment: 'center' })],\n                                shading: { fill: 'DCE6F1' },\n                            }),\n                            new TableCell({\n                                children: [new Paragraph({ text: 'Development Hours', bold: true, alignment: 'center' })],\n                                shading: { fill: 'DCE6F1' },\n                            }),\n                            new TableCell({\n                                children: [new Paragraph({ text: 'Comments', bold: true, alignment: 'center' })],\n                                shading: { fill: 'DCE6F1' },\n                            }),\n                        ],\n                    }),\n                    ...subtaskRows,\n                ],\n                width: { size: 100, type: 'pct' },\n            });\n\n            docContent.push(table);\n        });\n\n        // Add summary\n        docContent.push(\n            new Paragraph({\n                text: `Total No. of Hours: ${totalHours}`,\n                spacing: { after: 200 },\n            }),\n            new Paragraph({\n                text: `Hourly Rate: $${hourlyRate}`,\n                spacing: { after: 200 },\n            }),\n            new Paragraph({\n                text: `Total Cost: $${(totalHours * hourlyRate).toFixed(2)}`,\n                spacing: { after: 200 },\n            })\n        );\n\n        const doc = new Document({\n            sections: [\n                {\n                    children: [\n                        new Paragraph({\n                            text: 'Project Task Details',\n                            heading: 'Heading1',\n                            spacing: { after: 300 },\n                        }),\n                        ...docContent,\n                    ],\n                },\n            ],\n        });\n\n        Packer.toBlob(doc).then((blob) => {\n            saveAs(blob, 'Project_Estimates.docx');\n        });\n    };\n\n    return (\n        <div className=\"results-table\">\n            <h3>Project Task Details</h3>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Task</th>\n                        <th>Subtask</th>\n                        <th>Development Hours</th>\n                        <th>Comments</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tasks.map((taskItem, taskIndex) =>\n                        taskItem.subtasks.map((subtask, subIndex) => {\n                            const isEditing =\n                                editingRow.taskIndex === taskIndex &&\n                                editingRow.subtaskIndex === subIndex;\n\n                            return (\n                                <tr \n                                    key={`${taskIndex}-${subIndex}`}\n                                    className=\"group hover:bg-gray-50 transition-colors duration-200\"\n                                >\n                                    <td>{subIndex === 0 ? taskItem.task : ''}</td>\n                                    <td>\n                                        {isEditing ? (\n                                            <input\n                                                type=\"text\"\n                                                value={subtask.subtask}\n                                                onChange={(e) =>\n                                                    handleChange(taskIndex, subIndex, 'subtask', e.target.value)\n                                                }\n                                                className=\"p-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-full\"\n                                            />\n                                        ) : (\n                                            subtask.subtask\n                                        )}\n                                    </td>\n                                    <td>\n                                        {isEditing ? (\n                                            <input\n                                                type=\"number\"\n                                                value={subtask.hours}\n                                                onChange={(e) =>\n                                                    handleChange(taskIndex, subIndex, 'hours', e.target.value)\n                                                }\n                                                className=\"p-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-full\"\n                                            />\n                                        ) : (\n                                            `${subtask.hours} hours`\n                                        )}\n                                    </td>\n                                    <td>\n                                        {isEditing ? (\n                                            <input\n                                                type=\"text\"\n                                                value={subtask.comments}\n                                                onChange={(e) =>\n                                                    handleChange(taskIndex, subIndex, 'comments', e.target.value)\n                                                }\n                                                className=\"p-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500 w-full\"\n                                            />\n                                        ) : (\n                                            subtask.comments || 'N/A'\n                                        )}\n                                    </td>\n                                    <td>\n                                        {isEditing ? (\n                                            <button\n                                                className=\"p-1 rounded-full hover:bg-blue-100 transition-colors duration-200\"\n                                                onClick={() => handleSave(taskIndex, subIndex)}\n                                            >\n                                                <Check size={16} className=\"text-blue-600\" />\n                                            </button>\n                                        ) : (\n                                            <button\n                                                className=\"opacity-0 group-hover:opacity-100 p-1 rounded-full hover:bg-gray-200 transition-all duration-200\"\n                                                onClick={() =>\n                                                    setEditingRow({\n                                                        taskIndex,\n                                                        subtaskIndex: subIndex,\n                                                    })\n                                                }\n                                            >\n                                                <Pencil size={16} className=\"text-gray-600\" />\n                                            </button>\n                                        )}\n                                    </td>\n                                </tr>\n                            );\n                        })\n                    )}\n                    {/* Summary Rows - Keep existing code unchanged */}\n                    <tr>\n                        <td colSpan=\"2\"><strong>Total No. of Hours</strong></td>\n                        <td colSpan=\"2\">{totalHours} hours</td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"2\"><strong>Hourly Rate</strong></td>\n                        <td colSpan=\"2\">\n                            <input\n                                type=\"number\"\n                                value={hourlyRate}\n                                onChange={(e) => setHourlyRate(Number(e.target.value))}\n                                placeholder=\"Enter rate\"\n                                className=\"p-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td colSpan=\"2\"><strong>Total Cost</strong></td>\n                        <td colSpan=\"2\">${(totalHours * hourlyRate).toFixed(2)}</td>\n                    </tr>\n                </tbody>\n            </table>\n            {errors.message && <p className=\"error\">{errors.message}</p>}\n            <div className=\"export-buttons\">\n                <button className=\"action-button\" onClick={exportToPDF}>\n                    Export to PDF\n                </button>\n                <button className=\"action-button\" onClick={exportToDOCX}>\n                    Export to DOCX\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default ResultsTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}