{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahahmed/Desktop/Cost-Estimator/Frontend/src/ResultsTable.js\";\n// src/components/ResultsTable.js\nimport React from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { Document, Packer, Paragraph, Table, TableCell, TableRow } from 'docx';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsTable({\n  projectData\n}) {\n  const estimates = Array.isArray(projectData) ? projectData : [];\n  const exportToPDF = () => {\n    const doc = new jsPDF();\n    doc.text('Project Task Details', 10, 10);\n    autoTable(doc, {\n      head: [['Task', 'Subtask', 'Development Hours', 'Comments/Notes']],\n      body: estimates.map(({\n        task,\n        subtask,\n        developmentHours,\n        comments\n      }) => [task || 'N/A', subtask || 'N/A', `${developmentHours || 0} hours`, comments || 'N/A'])\n    });\n    doc.save('Project_Estimates.pdf');\n  };\n  const exportToDOCX = () => {\n    const rows = estimates.map(({\n      task,\n      subtask,\n      developmentHours,\n      comments\n    }) => new TableRow({\n      children: [new TableCell({\n        children: [new Paragraph(task || 'N/A')]\n      }), new TableCell({\n        children: [new Paragraph(subtask || 'N/A')]\n      }), new TableCell({\n        children: [new Paragraph(`${developmentHours || 0} hours`)]\n      }), new TableCell({\n        children: [new Paragraph(comments || 'N/A')]\n      })]\n    }));\n    const doc = new Document({\n      sections: [{\n        children: [new Paragraph({\n          text: 'Project Task Details',\n          heading: 'Heading1'\n        }), new Table({\n          rows: [new TableRow({\n            children: [new TableCell({\n              children: [new Paragraph('Task')]\n            }), new TableCell({\n              children: [new Paragraph('Subtask')]\n            }), new TableCell({\n              children: [new Paragraph('Development Hours')]\n            }), new TableCell({\n              children: [new Paragraph('Comments/Notes')]\n            })]\n          }), ...rows]\n        })]\n      }]\n    });\n    Packer.toBlob(doc).then(blob => {\n      saveAs(blob, 'Project_Estimates.docx');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Project Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), estimates.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No estimates available to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Development Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Comments/Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: estimates.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.task || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.subtask || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [item.developmentHours || 0, \" hours\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.comments || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToPDF,\n        children: \"Export to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToDOCX,\n        children: \"Export to DOCX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","jsPDF","autoTable","Document","Packer","Paragraph","Table","TableCell","TableRow","saveAs","jsxDEV","_jsxDEV","ResultsTable","projectData","estimates","Array","isArray","exportToPDF","doc","text","head","body","map","task","subtask","developmentHours","comments","save","exportToDOCX","rows","children","sections","heading","toBlob","then","blob","className","fileName","_jsxFileName","lineNumber","columnNumber","length","item","index","onClick","_c","$RefreshReg$"],"sources":["/Users/abdullahahmed/Desktop/Cost-Estimator/Frontend/src/ResultsTable.js"],"sourcesContent":["// src/components/ResultsTable.js\nimport React from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { Document, Packer, Paragraph, Table, TableCell, TableRow } from 'docx';\nimport { saveAs } from 'file-saver';\n\nfunction ResultsTable({ projectData }) {\n    const estimates = Array.isArray(projectData) ? projectData : [];\n\n    const exportToPDF = () => {\n        const doc = new jsPDF();\n        doc.text('Project Task Details', 10, 10);\n        autoTable(doc, {\n            head: [['Task', 'Subtask', 'Development Hours', 'Comments/Notes']],\n            body: estimates.map(({ task, subtask, developmentHours, comments }) => [\n                task || 'N/A',\n                subtask || 'N/A',\n                `${developmentHours || 0} hours`,\n                comments || 'N/A',\n            ]),\n        });\n        doc.save('Project_Estimates.pdf');\n    };\n\n    const exportToDOCX = () => {\n        const rows = estimates.map(({ task, subtask, developmentHours, comments }) => (\n            new TableRow({\n                children: [\n                    new TableCell({ children: [new Paragraph(task || 'N/A')] }),\n                    new TableCell({ children: [new Paragraph(subtask || 'N/A')] }),\n                    new TableCell({ children: [new Paragraph(`${developmentHours || 0} hours`)] }),\n                    new TableCell({ children: [new Paragraph(comments || 'N/A')] }),\n                ],\n            })\n        ));\n\n        const doc = new Document({\n            sections: [\n                {\n                    children: [\n                        new Paragraph({ text: 'Project Task Details', heading: 'Heading1' }),\n                        new Table({\n                            rows: [\n                                new TableRow({\n                                    children: [\n                                        new TableCell({ children: [new Paragraph('Task')] }),\n                                        new TableCell({ children: [new Paragraph('Subtask')] }),\n                                        new TableCell({ children: [new Paragraph('Development Hours')] }),\n                                        new TableCell({ children: [new Paragraph('Comments/Notes')] }),\n                                    ],\n                                }),\n                                ...rows,\n                            ],\n                        }),\n                    ],\n                },\n            ],\n        });\n\n        Packer.toBlob(doc).then((blob) => {\n            saveAs(blob, 'Project_Estimates.docx');\n        });\n    };\n\n    return (\n        <div className=\"results-table\">\n            <h3>Project Task Details</h3>\n            {estimates.length === 0 ? (\n                <p>No estimates available to display.</p>\n            ) : (\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Task</th>\n                            <th>Subtask</th>\n                            <th>Development Hours</th>\n                            <th>Comments/Notes</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {estimates.map((item, index) => (\n                            <tr key={index}>\n                                <td>{item.task || 'N/A'}</td>\n                                <td>{item.subtask || 'N/A'}</td>\n                                <td>{item.developmentHours || 0} hours</td>\n                                <td>{item.comments || 'N/A'}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )}\n            <div className=\"actions\">\n                <button onClick={exportToPDF}>Export to PDF</button>\n                <button onClick={exportToDOCX}>Export to DOCX</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ResultsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}