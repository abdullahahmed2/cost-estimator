{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahahmed/Desktop/Cost-Estimator/Frontend/src/ResultsTable.js\";\nimport React from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsTable({\n  projectData\n}) {\n  const {\n    tasks\n  } = projectData || {};\n  if (!tasks || !Array.isArray(tasks)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  }\n  const exportToPDF = () => {\n    const doc = new jsPDF();\n\n    // Title\n    doc.setFontSize(16);\n    doc.text('Project Task Details', 14, 20);\n\n    // Generate table data\n    const tableData = [];\n    tasks.forEach(({\n      task,\n      subtasks\n    }) => {\n      // Add a row for the task\n      tableData.push([task, '', '', '']);\n\n      // Add rows for subtasks\n      subtasks.forEach(({\n        subtask,\n        hours,\n        comments\n      }) => {\n        tableData.push(['', subtask, `${hours} hours`, comments || 'N/A']);\n      });\n    });\n\n    // Generate table\n    autoTable(doc, {\n      head: [['Task', 'Subtask', 'Development Hours', 'Comments']],\n      body: tableData,\n      startY: 30,\n      margin: {\n        left: 14,\n        right: 14\n      },\n      headStyles: {\n        fillColor: [41, 128, 185],\n        textColor: 255\n      },\n      bodyStyles: {\n        textColor: 50\n      },\n      alternateRowStyles: {\n        fillColor: [240, 240, 240]\n      },\n      tableWidth: 'auto'\n    });\n\n    // Save the PDF\n    doc.save('Project_Estimates.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Project Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subtask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Development Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map((taskItem, taskIndex) => taskItem.subtasks.map((subtask, subIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: subIndex === 0 ? taskItem.task : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: subtask.subtask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [subtask.hours, \" hours\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: subtask.comments || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)]\n        }, `${taskIndex}-${subIndex}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToPDF,\n        children: \"Export to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","jsPDF","autoTable","jsxDEV","_jsxDEV","ResultsTable","projectData","tasks","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","exportToPDF","doc","setFontSize","text","tableData","forEach","task","subtasks","push","subtask","hours","comments","head","body","startY","margin","left","right","headStyles","fillColor","textColor","bodyStyles","alternateRowStyles","tableWidth","save","className","map","taskItem","taskIndex","subIndex","onClick","_c","$RefreshReg$"],"sources":["/Users/abdullahahmed/Desktop/Cost-Estimator/Frontend/src/ResultsTable.js"],"sourcesContent":["import React from 'react';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\n\nfunction ResultsTable({ projectData }) {\n    const { tasks } = projectData || {};\n    if (!tasks || !Array.isArray(tasks)) {\n        return <p>No tasks available to display.</p>;\n    }\n\n    const exportToPDF = () => {\n        const doc = new jsPDF();\n\n        // Title\n        doc.setFontSize(16);\n        doc.text('Project Task Details', 14, 20);\n\n        // Generate table data\n        const tableData = [];\n        tasks.forEach(({ task, subtasks }) => {\n            // Add a row for the task\n            tableData.push([task, '', '', '']);\n\n            // Add rows for subtasks\n            subtasks.forEach(({ subtask, hours, comments }) => {\n                tableData.push(['', subtask, `${hours} hours`, comments || 'N/A']);\n            });\n        });\n\n        // Generate table\n        autoTable(doc, {\n            head: [['Task', 'Subtask', 'Development Hours', 'Comments']],\n            body: tableData,\n            startY: 30,\n            margin: { left: 14, right: 14 },\n            headStyles: { fillColor: [41, 128, 185], textColor: 255 },\n            bodyStyles: { textColor: 50 },\n            alternateRowStyles: { fillColor: [240, 240, 240] },\n            tableWidth: 'auto',\n        });\n\n        // Save the PDF\n        doc.save('Project_Estimates.pdf');\n    };\n\n    return (\n        <div className=\"results-table\">\n            <h3>Project Task Details</h3>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Task</th>\n                        <th>Subtask</th>\n                        <th>Development Hours</th>\n                        <th>Comments</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tasks.map((taskItem, taskIndex) =>\n                        taskItem.subtasks.map((subtask, subIndex) => (\n                            <tr key={`${taskIndex}-${subIndex}`}>\n                                <td>{subIndex === 0 ? taskItem.task : ''}</td>\n                                <td>{subtask.subtask}</td>\n                                <td>{subtask.hours} hours</td>\n                                <td>{subtask.comments || 'N/A'}</td>\n                            </tr>\n                        ))\n                    )}\n                </tbody>\n            </table>\n            <div className=\"actions\">\n                <button onClick={exportToPDF}>Export to PDF</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ResultsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}