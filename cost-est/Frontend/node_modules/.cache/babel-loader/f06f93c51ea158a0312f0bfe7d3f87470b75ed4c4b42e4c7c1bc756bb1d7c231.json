{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahahmed/Desktop/Cost-Estimator/Frontend/src/ProjectForm.js\",\n  _s = $RefreshSig$();\n// src/components/ProjectForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ResultsTable from './ResultsTable';\nimport { Snackbar, LinearProgress, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectForm() {\n  _s();\n  const [projectName, setProjectName] = useState('');\n  const [projectSize, setProjectSize] = useState('');\n  const [industry, setIndustry] = useState('');\n  const [budget, setBudget] = useState('');\n  const [timeline, setTimeline] = useState('');\n  const [additionalInfo, setAdditionalInfo] = useState('');\n  const [fileUpload, setFileUpload] = useState(null);\n  const [estimates, setEstimates] = useState(null); // Store estimates data\n  const [errors, setErrors] = useState({});\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('error');\n  const [loading, setLoading] = useState(false);\n  const validateFields = () => {\n    const newErrors = {};\n    if (!projectName.trim()) newErrors.projectName = 'Project Name is required';\n    if (!projectSize) newErrors.projectSize = 'Please select a Project Size';\n    if (!industry) newErrors.industry = 'Please select an Industry';\n    if (!budget || budget <= 0) newErrors.budget = 'Budget must be a positive number';\n    if (!timeline || timeline <= 0 || !Number.isInteger(Number(timeline))) newErrors.timeline = 'Timeline must be a positive integer';\n    if (fileUpload) {\n      const allowedExtensions = ['txt', 'docx', 'pdf'];\n      const fileExtension = fileUpload.name.split('.').pop().toLowerCase();\n      if (!allowedExtensions.includes(fileExtension)) newErrors.fileUpload = 'File type must be .txt, .docx, or .pdf';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateFields()) {\n      setSnackbarMessage('Please fix the errors in the form.');\n      setSnackbarSeverity('error');\n      setOpenSnackbar(true);\n      return;\n    }\n    setLoading(true);\n    setEstimates(null);\n    const formData = new FormData();\n    formData.append('project_name', projectName);\n    formData.append('project_size', projectSize);\n    formData.append('industry', industry);\n    formData.append('budget', budget);\n    formData.append('timeline', timeline);\n    formData.append('additional_info', additionalInfo);\n    if (fileUpload) formData.append('attachment', fileUpload);\n    try {\n      const response = await axios.post('http://localhost:5000/projectDetails', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Backend response:', response.data);\n      const estimatesData = response.data.estimates;\n      if (Array.isArray(estimatesData)) {\n        setEstimates(estimatesData);\n        setSnackbarMessage('Project estimates calculated successfully!');\n        setSnackbarSeverity('success');\n      } else {\n        setSnackbarMessage('No valid estimates found.');\n        setSnackbarSeverity('error');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setSnackbarMessage('An error occurred while submitting the form.');\n      setSnackbarSeverity('error');\n    } finally {\n      setLoading(false);\n      setOpenSnackbar(true);\n    }\n  };\n  const handleCloseSnackbar = () => setOpenSnackbar(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"project-form\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n      sx: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbarSeverity,\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), estimates && /*#__PURE__*/_jsxDEV(ResultsTable, {\n      projectData: estimates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectForm, \"gkT7NnnCejHUIakTyNEUgmtNnlA=\");\n_c = ProjectForm;\nexport default ProjectForm;\nvar _c;\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"names":["React","useState","axios","ResultsTable","Snackbar","LinearProgress","Alert","jsxDEV","_jsxDEV","ProjectForm","_s","projectName","setProjectName","projectSize","setProjectSize","industry","setIndustry","budget","setBudget","timeline","setTimeline","additionalInfo","setAdditionalInfo","fileUpload","setFileUpload","estimates","setEstimates","errors","setErrors","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","loading","setLoading","validateFields","newErrors","trim","Number","isInteger","allowedExtensions","fileExtension","name","split","pop","toLowerCase","includes","Object","keys","length","handleSubmit","e","preventDefault","formData","FormData","append","response","post","headers","console","log","data","estimatesData","Array","isArray","error","handleCloseSnackbar","className","children","onSubmit","type","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","open","autoHideDuration","onClose","severity","projectData","_c","$RefreshReg$"],"sources":["/Users/abdullahahmed/Desktop/Cost-Estimator/Frontend/src/ProjectForm.js"],"sourcesContent":["// src/components/ProjectForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ResultsTable from './ResultsTable';\nimport { Snackbar, LinearProgress, Alert } from '@mui/material';\n\nfunction ProjectForm() {\n    const [projectName, setProjectName] = useState('');\n    const [projectSize, setProjectSize] = useState('');\n    const [industry, setIndustry] = useState('');\n    const [budget, setBudget] = useState('');\n    const [timeline, setTimeline] = useState('');\n    const [additionalInfo, setAdditionalInfo] = useState('');\n    const [fileUpload, setFileUpload] = useState(null);\n    const [estimates, setEstimates] = useState(null); // Store estimates data\n    const [errors, setErrors] = useState({});\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarSeverity, setSnackbarSeverity] = useState('error');\n    const [loading, setLoading] = useState(false);\n\n    const validateFields = () => {\n        const newErrors = {};\n        if (!projectName.trim()) newErrors.projectName = 'Project Name is required';\n        if (!projectSize) newErrors.projectSize = 'Please select a Project Size';\n        if (!industry) newErrors.industry = 'Please select an Industry';\n        if (!budget || budget <= 0) newErrors.budget = 'Budget must be a positive number';\n        if (!timeline || timeline <= 0 || !Number.isInteger(Number(timeline)))\n            newErrors.timeline = 'Timeline must be a positive integer';\n        if (fileUpload) {\n            const allowedExtensions = ['txt', 'docx', 'pdf'];\n            const fileExtension = fileUpload.name.split('.').pop().toLowerCase();\n            if (!allowedExtensions.includes(fileExtension))\n                newErrors.fileUpload = 'File type must be .txt, .docx, or .pdf';\n        }\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!validateFields()) {\n            setSnackbarMessage('Please fix the errors in the form.');\n            setSnackbarSeverity('error');\n            setOpenSnackbar(true);\n            return;\n        }\n\n        setLoading(true);\n        setEstimates(null);\n\n        const formData = new FormData();\n        formData.append('project_name', projectName);\n        formData.append('project_size', projectSize);\n        formData.append('industry', industry);\n        formData.append('budget', budget);\n        formData.append('timeline', timeline);\n        formData.append('additional_info', additionalInfo);\n        if (fileUpload) formData.append('attachment', fileUpload);\n\n        try {\n            const response = await axios.post('http://localhost:5000/projectDetails', formData, {\n                headers: { 'Content-Type': 'multipart/form-data' },\n            });\n            console.log('Backend response:', response.data);\n            const estimatesData = response.data.estimates;\n\n            if (Array.isArray(estimatesData)) {\n                setEstimates(estimatesData);\n                setSnackbarMessage('Project estimates calculated successfully!');\n                setSnackbarSeverity('success');\n            } else {\n                setSnackbarMessage('No valid estimates found.');\n                setSnackbarSeverity('error');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            setSnackbarMessage('An error occurred while submitting the form.');\n            setSnackbarSeverity('error');\n        } finally {\n            setLoading(false);\n            setOpenSnackbar(true);\n        }\n    };\n\n    const handleCloseSnackbar = () => setOpenSnackbar(false);\n\n    return (\n        <div className=\"form-container\">\n            <form onSubmit={handleSubmit} className=\"project-form\">\n                {/* Form Fields */}\n                {/* Add all your input fields and validations */}\n                <button type=\"submit\" className=\"submit-button\">Submit</button>\n            </form>\n\n            {loading && <LinearProgress sx={{ width: '100%' }} />}\n            <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n                <Alert onClose={handleCloseSnackbar} severity={snackbarSeverity}>\n                    {snackbarMessage}\n                </Alert>\n            </Snackbar>\n\n            {estimates && <ResultsTable projectData={estimates} />}\n        </div>\n    );\n}\n\nexport default ProjectForm;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,QAAQ,EAAEC,cAAc,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC0B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,OAAO,CAAC;EACjE,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMoC,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpB,IAAI,CAAC3B,WAAW,CAAC4B,IAAI,CAAC,CAAC,EAAED,SAAS,CAAC3B,WAAW,GAAG,0BAA0B;IAC3E,IAAI,CAACE,WAAW,EAAEyB,SAAS,CAACzB,WAAW,GAAG,8BAA8B;IACxE,IAAI,CAACE,QAAQ,EAAEuB,SAAS,CAACvB,QAAQ,GAAG,2BAA2B;IAC/D,IAAI,CAACE,MAAM,IAAIA,MAAM,IAAI,CAAC,EAAEqB,SAAS,CAACrB,MAAM,GAAG,kCAAkC;IACjF,IAAI,CAACE,QAAQ,IAAIA,QAAQ,IAAI,CAAC,IAAI,CAACqB,MAAM,CAACC,SAAS,CAACD,MAAM,CAACrB,QAAQ,CAAC,CAAC,EACjEmB,SAAS,CAACnB,QAAQ,GAAG,qCAAqC;IAC9D,IAAII,UAAU,EAAE;MACZ,MAAMmB,iBAAiB,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC;MAChD,MAAMC,aAAa,GAAGpB,UAAU,CAACqB,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpE,IAAI,CAACL,iBAAiB,CAACM,QAAQ,CAACL,aAAa,CAAC,EAC1CL,SAAS,CAACf,UAAU,GAAG,wCAAwC;IACvE;IACAK,SAAS,CAACU,SAAS,CAAC;IACpB,OAAOW,MAAM,CAACC,IAAI,CAACZ,SAAS,CAAC,CAACa,MAAM,KAAK,CAAC;EAC9C,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACjB,cAAc,CAAC,CAAC,EAAE;MACnBL,kBAAkB,CAAC,oCAAoC,CAAC;MACxDE,mBAAmB,CAAC,OAAO,CAAC;MAC5BJ,eAAe,CAAC,IAAI,CAAC;MACrB;IACJ;IAEAM,UAAU,CAAC,IAAI,CAAC;IAChBV,YAAY,CAAC,IAAI,CAAC;IAElB,MAAM6B,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE9C,WAAW,CAAC;IAC5C4C,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE5C,WAAW,CAAC;IAC5C0C,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE1C,QAAQ,CAAC;IACrCwC,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAExC,MAAM,CAAC;IACjCsC,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEtC,QAAQ,CAAC;IACrCoC,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEpC,cAAc,CAAC;IAClD,IAAIE,UAAU,EAAEgC,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAElC,UAAU,CAAC;IAEzD,IAAI;MACA,MAAMmC,QAAQ,GAAG,MAAMxD,KAAK,CAACyD,IAAI,CAAC,sCAAsC,EAAEJ,QAAQ,EAAE;QAChFK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACrD,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;MAC/C,MAAMC,aAAa,GAAGN,QAAQ,CAACK,IAAI,CAACtC,SAAS;MAE7C,IAAIwC,KAAK,CAACC,OAAO,CAACF,aAAa,CAAC,EAAE;QAC9BtC,YAAY,CAACsC,aAAa,CAAC;QAC3BhC,kBAAkB,CAAC,4CAA4C,CAAC;QAChEE,mBAAmB,CAAC,SAAS,CAAC;MAClC,CAAC,MAAM;QACHF,kBAAkB,CAAC,2BAA2B,CAAC;QAC/CE,mBAAmB,CAAC,OAAO,CAAC;MAChC;IACJ,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACZN,OAAO,CAACM,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BnC,kBAAkB,CAAC,8CAA8C,CAAC;MAClEE,mBAAmB,CAAC,OAAO,CAAC;IAChC,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC;MACjBN,eAAe,CAAC,IAAI,CAAC;IACzB;EACJ,CAAC;EAED,MAAMsC,mBAAmB,GAAGA,CAAA,KAAMtC,eAAe,CAAC,KAAK,CAAC;EAExD,oBACItB,OAAA;IAAK6D,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B9D,OAAA;MAAM+D,QAAQ,EAAEnB,YAAa;MAACiB,SAAS,EAAC,cAAc;MAAAC,QAAA,eAGlD9D,OAAA;QAAQgE,IAAI,EAAC,QAAQ;QAACH,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,EAENzC,OAAO,iBAAI3B,OAAA,CAACH,cAAc;MAACwE,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDpE,OAAA,CAACJ,QAAQ;MAAC2E,IAAI,EAAElD,YAAa;MAACmD,gBAAgB,EAAE,IAAK;MAACC,OAAO,EAAEb,mBAAoB;MAAAE,QAAA,eAC/E9D,OAAA,CAACF,KAAK;QAAC2E,OAAO,EAAEb,mBAAoB;QAACc,QAAQ,EAAEjD,gBAAiB;QAAAqC,QAAA,EAC3DvC;MAAe;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAEVnD,SAAS,iBAAIjB,OAAA,CAACL,YAAY;MAACgF,WAAW,EAAE1D;IAAU;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd;AAAClE,EAAA,CAnGQD,WAAW;AAAA2E,EAAA,GAAX3E,WAAW;AAqGpB,eAAeA,WAAW;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}